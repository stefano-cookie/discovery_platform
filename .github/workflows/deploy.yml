name: Deploy to Production

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js without cache
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        # Explicitly disable cache to avoid lock file errors
        cache: ''

    - name: Install and build frontend
      working-directory: ./frontend
      run: |
        # Clean install with legacy peer deps for React 19 compatibility
        # Retry up to 3 times with exponential backoff for npm registry failures
        max_attempts=3
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          echo "Attempt $attempt of $max_attempts: Installing frontend dependencies..."
          if npm ci --legacy-peer-deps; then
            echo "npm install succeeded"
            break
          else
            if [ $attempt -eq $max_attempts ]; then
              echo "npm install failed after $max_attempts attempts"
              exit 1
            fi
            wait_time=$((2 ** attempt))
            echo "npm install failed, retrying in ${wait_time} seconds..."
            sleep $wait_time
            attempt=$((attempt + 1))
          fi
        done
        # Build with increased memory limit and disable treating warnings as errors
        CI=false NODE_OPTIONS="--max-old-space-size=4096" npm run build
        

    - name: Install and build backend
      working-directory: ./backend
      run: |
        # Retry up to 3 times with exponential backoff for npm registry failures
        max_attempts=3
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          echo "Attempt $attempt of $max_attempts: Installing backend dependencies..."
          if npm ci; then
            echo "npm install succeeded"
            break
          else
            if [ $attempt -eq $max_attempts ]; then
              echo "npm install failed after $max_attempts attempts"
              exit 1
            fi
            wait_time=$((2 ** attempt))
            echo "npm install failed, retrying in ${wait_time} seconds..."
            sleep $wait_time
            attempt=$((attempt + 1))
          fi
        done
        npm run build

    - name: Deploy to server via SSH
      uses: easingthemes/ssh-deploy@v4.1.10
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY || '' }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST || '' }}
        REMOTE_USER: ${{ secrets.REMOTE_USER || '' }}
        SOURCE: "./"
        TARGET: "/var/www/vhosts/cfoeducation.it/discovery_platform_temp/"
        EXCLUDE: ".git/,.github/,node_modules/,backend/.env,backend/.env.production,frontend/.env,*.log,.DS_Store"
          
    - name: Execute deployment script on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.REMOTE_HOST || '' }}
        username: ${{ secrets.REMOTE_USER || '' }}
        key: ${{ secrets.SSH_PRIVATE_KEY || '' }}
        command_timeout: 30m
        script: |
          cd /var/www/vhosts/cfoeducation.it/discovery_platform_temp
          bash deploy-on-server.sh
name: Deploy to Production

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js without cache
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        # Explicitly disable cache to avoid lock file errors
        cache: ''

    - name: Install and build frontend
      working-directory: ./frontend
      run: |
        # Clean install with legacy peer deps for React 19 compatibility
        npm ci --legacy-peer-deps
        # Build with increased memory limit and disable treating warnings as errors
        CI=false NODE_OPTIONS="--max-old-space-size=4096" npm run build
        
    - name: Install and build backend
      working-directory: ./backend
      run: |
        npm ci
        npm run build

    - name: Deploy to server via SSH
      uses: easingthemes/ssh-deploy@v4.1.10
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY || '' }}
        REMOTE_HOST: ${{ secrets.REMOTE_HOST || '' }}
        REMOTE_USER: ${{ secrets.REMOTE_USER || '' }}
        SOURCE: "./"
        TARGET: "/var/www/vhosts/cfoeducation.it/discovery_platform_temp/"
        EXCLUDE: ".git/,.github/,node_modules/,backend/uploads/,backend/.env,frontend/.env,*.log,.DS_Store"
          
    - name: Execute deployment script on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.REMOTE_HOST || '' }}
        username: ${{ secrets.REMOTE_USER || '' }}
        key: ${{ secrets.SSH_PRIVATE_KEY || '' }}
        script: |
          cd /var/www/vhosts/cfoeducation.it/discovery_platform_temp
          bash deploy-on-server.sh